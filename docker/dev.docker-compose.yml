networks:
  smq-bridge:
    driver: bridge

services:
  smq-broker:
    image: apache/kafka:latest
    container_name: smq-broker-kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092"
    networks:
      - smq-bridge

  smq-obs:
    image: grafana/otel-lgtm:latest
    container_name: smq-obs-otel-lgtm
    volumes:
      - ./volume/grafana:/data/grafana
      - ./volume/prometheus:/data/prometheus
      - ./volume/loki:/data/loki
    env_file:
      - ../env/obs.env
    ports:
      - "4317:4317" # OpenTelemetry gRPC
      - "4318:4318" # OpenTelemetry HTTP
      - "3000:3000" # Web dashboard
    networks:
      - smq-bridge

  smq-infra-init:
    image: apache/kafka:latest
    container_name: smq-infra-init
    entrypoint: [ "/bin/sh", "-c", "/infra/kafka-init.sh" ]
    volumes:
      - ./kafka-init.sh:/infra/kafka-init.sh
    depends_on:
      - smq-broker
      - smq-obs
    env_file:
      - ../env/kafka.env
    networks:
      - smq-bridge